[
    {
        "id": "0",
        "title": "GameJS",
        "technologies": [
            {
                "name": "Javascript",
                "path": "./assets/images/javascript_logo.png"
            },
            {
                "name": "jQuery",
                "path": "./assets/images/jquery_logo.png"
            }
        ],
        "year":2016,
        "repositoryUrl":"https://github.com/kmhoran/GamesJs",
        "about": "<p>I was really excited to make this a couple years back when I encountered a new jQuery pattern that blew my mind. It centers around a core Project object which functions a lot like $score does in Angular.</p><p>I don't use jQuery much these days, but I still consider this a very valuable reference.</p>"
    },
    {
        "id": "1",
        "title": ".Net Document Rendering",
        "technologies": [
            {
                "name": "C#",
                "path": "./assets/images/cSharp_logo.jpg"
            },
            {
                "name": "ASP.Net",
                "path": "./assets/images/dotNet_logo.png"
            },
            {
                "name": "Entity Framework",
                "path": "./assets/images/ef_logo.png"
            }
        ],
        "year":2017,
        "repositoryUrl":"https://github.com/kmhoran/cSharpFileStorage",
        "about": "<p>I work with a fair amount of file uploading and presentation in my day-to-day. I created this reusable code to handle the basic functionality I often need to offer.</p>"
        
    },
    
    {
        "id": "2",
        "title": "RabbitMq Client",
        "technologies": [
            {
                "name": "C#",
                "path": "./assets/images/cSharp_logo.jpg"
            },
            {
                "name": "RabbitMQ",
                "path": "./assets/images/rabbitmq_logo.png"
            }
        ],
        "year":2017,
        "repositoryUrl":"https://github.com/kmhoran/RabbitMQ",
        "about": "<p>As we migrate a lot of our code base over to a micro-service pattern at work, I've had a lot of experience using the RabbitMQ message broker. It's ability to orchestrate lightweight, yet robust communication in a distributed system is invaluable.</p><p>This is a personal reference for creating RabbitMQ clients in C#.</p>"
    },
    {
        "id": "3",
        "title": "Git Photobooth",
        "technologies": [
            {
                "name": "Python",
                "path": "./assets/images/python_logo.jpg"
            },
            {
                "name": "Git Hooks",
                "path": "./assets/images/Git_logo.png"
            },
            {
                "name": "Bash",
                "path": "./assets/images/binbash_logo.png"
            }
        ],
        "year":2018,
        "repositoryUrl":"https://github.com/kmhoran/gitPhotobooth",
        "about": "<p>Having fun with Git Hooks, this project blends coding milestones with social media. Each time a user makes a git commit, their webcam takes a picture of them in their moment of triumph.</p><p>More often than not, I ended up with some terrible pictures of myself, but it was an entertaining way to dive into the standard tools Git provides.</p>"
    },
    {
        "id": "4",
        "title": "Block Chain",
        "technologies": [
            {
                "name": "Python",
                "path": "./assets/images/python_logo.jpg"
            },{
                "name": "Flask",
                "path": "./assets/images/flask_logo.png"
            }
        ],
        "year":2018,
        "repositoryUrl":"https://github.com/kmhoran/BlockChainDemo",
        "about": "<p>With all the blockchain hype Bitcoin was stirring up this winter, I was curious about how blockchain technology actually functioned Â– especially when it came to proof of work.</p><p>This is a textbook implementation of blockchain that I built to run as a cluster of Flask peers.</p>"
    },
    {
        "id": "6",
        "title": "Video Streaming with Apache Kafka",
        "technologies": [
            {"name": "Python",
                "path": "./assets/images/python_logo.jpg"
            },
            {
                "name" :"Flask",
                "path":"./assets/images/flask_logo.png"
            },
            {
                "name" :"Apache Kafka",
                "path":"./assets/images/kafka_logo.jpg"
            }
        ],
        "year":2018,
        "blogUrl":"https://medium.com/@kevin.michael.horan/distributed-video-streaming-with-python-and-kafka-551de69fe1dd",
        "repositoryUrl":"https://github.com/kmhoran/DistributedStreamingWithPythonAndKafka",
        "about": "<p>I've spent a lot of time this past year investigating micro-service architecture and the event-driven communication that tends to go along with that.</p><p>In this project I investigate Apache's Kafka message streamer, and spice things up by streaming video rather than plain old text.</p>"
    },
    {
        "id": "5",
        "title": "Shareable Database Files",
        "technologies": [
            {
                "name": "C#",
                "path": "./assets/images/cSharp_logo.jpg"
            },
            {
                "name": "ASP.Net",
                "path": "./assets/images/dotNet_logo.png"
            },
            {
                "name": "Entity Framework",
                "path": "./assets/images/ef_logo.png"
            },
            {
                "name": "SQL Server",
                "path": "./assets/images/SSMS_logo.jpg"
            }
        ],
        "year":2018,
        "repositoryUrl":"https://github.com/kmhoran/dbConnect",
        "blogUrl":"https://medium.com/@kevin.michael.horan/shareable-database-with-ms-sql-server-net-entity-framework-73af7372e345",
        "about": "<p>An exploration into how ASP.NET ships pre-configured database files to ease developer addoption of a project.</p><p>In my blog I talk about how database-first Entity-Framework models can be built into a cloneable public project.</p>"
    },
    {
        "id": "6",
        "title": "LA Weather App",
        "technologies": [
            {"name": "Python",
                "path": "./assets/images/python_logo.jpg"
            },
            {
                "name" :"Django",
                "path":"./assets/images/django_logo.png"
            },
            {
                "name" :"Python Scheduler",
                "path":"./assets/images/alt_python_logo.jpg"
            },
            {
                "name" :"PostgreSQL",
                "path":"./assets/images/postgres_logo.png" 
            },
            {
                "name" :"Heroku",
                "path":"./assets/images/heroku_logo.png" 
            }
        ],
        "year":2018,
        "blogUrl":"https://medium.com/@kevin.michael.horan/scheduling-tasks-in-django-with-the-advanced-python-scheduler-663f17e868e6",
        "hostedProjectUrl":"https://la-weather-app.herokuapp.com",
        "repositoryUrl":"https://github.com/kmhoran/la-weather-app",
        "about": "<p>This project is built to emphasize the usefulness of the Advanced Python Scheduler. The tool provides some very handy functionality, but configuration within a Django app can get a bit tricky. I detail the patterns that won me success in my blog post.</p><p>The site hosted on Heroku's free tier, so it might take a second to first wake up.</p>"
    },
    {
        "id": "7",
        "title": "kmhoran.github.io",
        "technologies": [
            {"name": "Angular",
                "path": "./assets/images/angular_logo.png"
            },
            {
                "name" :"Angular CLI",
                "path":"./assets/images/angular_CLI_logo.png"
            },
            {
                "name" :"Typescript",
                "path":"./assets/images/typescript_logo.png"
            },
            {
                "name" :"GitHub",
                "path":"./assets/images/Git_logo.png" 
            }
        ],
        "year":2018,
        "repositoryUrl":"https://github.com/kmhoran/kmhoran.github.io",
        "hostedProjectUrl":"/",
        "about": "<p>Time to get meta! This is the single-page application you're browsing right now. Built up in Anuglar (5), this was a terrific way to take full advantage of the one hosted webpage GitHub provides each user.</p><p>I'd never used Angular's CLI before this, but now I won't leave home without it.</p>"
    },
    {
        "id": "8",
        "title": "Djangular Dictionary",
        "technologies": [
            {
                "name" :"Angular CLI",
                "path":"./assets/images/angular_CLI_logo.png"
            },
            {"name": "Python",
                "path": "./assets/images/python_logo.jpg"
            },
            {
                "name" :"Django",
                "path":"./assets/images/django_logo.png"
            },
            {
                "name" :"Heroku",
                "path":"./assets/images/heroku_logo.png" 
            }
        ],
        "year":2018,
        "repositoryUrl":"https://github.com/kmhoran/django_dictionary_server",
        "about": "<p>This project was a proof of concept for a single-page, blog-style, Angular6 app that runs on Django. My goal was to pull these technologies together and deploy a production-ready site.</p><p>As of this writing, I am detailing the steps I took for a new blog post. I want to give readers the tools they need to build and deploy an Angular app today. It's gonna be lit.</p>"
    }
]
